Balanced Binary Tree

1. Edge Case: Empty tree, tree with only one node
2. Idea: Traverse the tree and return False if the difference in depths between a left and right node differs by more than one, else, return the max of left and right as that is the depth for that node
3. Pseudo Code:
    1. Define a dfs function
        - Terminal condition: if null, return 0
        - Perform dfs for left and right node
        - If the difference between the left and right node is greater than 1, or that left or right is already a -1,  return -1
        - Else, return the max of left and right + 1
    2. Return the result of the check of whether dfs == -1
4. Time Complexity: O(n) where n is the number of nodes
5. Space Complexity: O(1)
6. Learnings: Have the dfs return -1 and propagate this -1 to the top of the call stack